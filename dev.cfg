[buildout]
extends =
    plone-5.2.x.cfg

parts +=
    i18ndude
    omelette
    scripts
    rebuild_i18n-sh
    releaser
    robot

[instance]
eggs +=
    Products.PrintingMailHost

[i18ndude]
recipe = zc.recipe.egg
eggs = i18ndude

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}

[scripts]
recipe = zc.recipe.egg
eggs = zest.releaser

[rebuild_i18n-sh]
recipe = collective.recipe.template
output = ${buildout:directory}/bin/rebuild_i18n.sh
mode = 755
input = inline:
    #! /bin/sh
    # see http://maurits.vanrees.org/weblog/archive/2010/10/i18n-plone-4 for more information

    I18NDOMAIN="collective.pwexpiry"

    # find the locales dir
    LOCALES=`find . -type d | grep -m 1 "locales"`
    SOURCE=`dirname $LOCALES`;

    # rebuild pot file for package's domain and merge it with any manual translations needed
    bin/i18ndude rebuild-pot --pot $LOCALES/$I18NDOMAIN.pot --merge $LOCALES/manual.pot --create $I18NDOMAIN $SOURCE

    # synchronise translations for package's domain
    for po in $LOCALES/*/LC_MESSAGES/$I18NDOMAIN.po; do
        bin/i18ndude sync --pot $LOCALES/$I18NDOMAIN.pot $po
    done

    # rebuild pot file for Plone's domain
    bin/i18ndude rebuild-pot --pot $LOCALES/plone.pot --create plone $SOURCE/configure.zcml $SOURCE/profiles/default

    # synchronise translations for Plone's domain
    for po in $LOCALES/*/LC_MESSAGES/plone.po; do
        bin/i18ndude sync --pot $LOCALES/plone.pot $po
    done

[releaser]
recipe = zc.recipe.egg
eggs = zest.releaser[recommended]

[robot]
recipe = zc.recipe.egg
eggs =
    Pillow
    ${test:eggs}
    plone.app.robotframework
